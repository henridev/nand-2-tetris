// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 * 000 000 000
 * 
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[6..8], a=a1, b=b1, c=c1, d=d1, e=e1, f=f1, g=g1, h=h1);
    RAM64(in=in, load=a1, address=address[0..5], out=out0); // 0-64 - at 000 - last not included
    RAM64(in=in, load=b1, address=address[0..5], out=out1); // 64 - 128 - at 001
    RAM64(in=in, load=c1, address=address[0..5], out=out2); // 128 - 192 - at 010
    RAM64(in=in, load=d1, address=address[0..5], out=out3); // 192 - 256 - at 011
    RAM64(in=in, load=e1, address=address[0..5], out=out4); // 256 - 320 - at 100
    RAM64(in=in, load=f1, address=address[0..5], out=out5); // 320 - 384 - at 101
    RAM64(in=in, load=g1, address=address[0..5], out=out6); // 384 - 448 - at 110
    RAM64(in=in, load=h1, address=address[0..5], out=out7); // 448 - 512 - at 111
    Mux8Way16(a=out0, b=out1, c=out2, d=out3, e=out4,
                 f=out5, g=out6, h=out7, sel=address[6..8], out=out);
}